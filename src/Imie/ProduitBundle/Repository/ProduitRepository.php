<?php

namespace Imie\ProduitBundle\Repository;

use Doctrine\ORM\EntityRepository;

//Avec le use qui va avec :	
use Doctrine\ORM\EntityManager;
use Imie\ProduitBundle\Entity\Produit;
use Imie\ProduitBundle\Entity\Stock;
use Imie\ProduitBundle\Entity\Image;
/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends EntityRepository
{
   
    /* Créez une méthode getArticles() dans ArticleRepository qui vous permettra de sélectionner
les articles du plus récent au plus ancien. */
    public function  getProduits(EntityManager $em){
        
        $queryBuilder = $em->createQueryBuilder();

        $queryBuilder->select("p,c, i")
            ->from("ImieProduitBundle:Produit", "p")
            ->leftJoin("p.idcategorie", "c")
            ->leftJoin("p.idimage", "i")
        ;
        //group By
        /*
        ->leftJoin('a.user', 'u')
        ->where('u = :user')
        ->setParameter('user', $users)
       */
        
        $query = $queryBuilder->getQuery();
        
        $articles = $query->getResult();

        //var_dump($articles);
        
        return $articles;
    }
    
    public function  getProduitId(EntityManager $em, $id){
        
        $queryBuilder = $em->createQueryBuilder();
        
        $queryBuilder->select("p,c, i")
            ->from("ImieProduitBundle:Produit", "p")
            ->leftJoin("p.idcategorie", "c")
            ->leftJoin("p.idimage", "i")
            ->where('p.id = :id')
            ->setParameter('id', $id)
        ;
        $query = $queryBuilder->getQuery(); 
        $articles = $query->getResult();

        //var_dump($articles);
        if($articles && count($articles)==1){
            return $articles[0];
        }
        return null;
    }
}